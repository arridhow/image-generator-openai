import Head from "next/head";
import Image from "next/image";
import { FormEvent, useState } from "react";

const colors = ["purple", "red", "yellow", "green", "blue"];

export default function Home() {
  const [text, setText] = useState("");
  const [selectedBox, setSelectedBox] = useState(0);
  const [loading, setLoading] = useState(false);
  const [data, setData] = useState<any>(null);

  async function getResponse() {
    const response = await fetch("/api/hello", {
      method: "POST",
      body: JSON.stringify({
        text,
      }),
      headers: {
        "Content-Type": "application/json",
      },
    }).finally(() => {
      setLoading(false);
    });
    const temp = await response.json();
    setData(temp.data.data);
  }

  return (
    <>
      <Head>
        <title>Image Generator</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="w-full h-full bg-gray-100 flex justify-center overflow-x-hidden">
        <div className="flex flex-col p-10 my-12 mx-6 rounded-2xl bg-white">
          <h1 className="text-4xl mb-8 uppercase font-extrabold tracking-widest text text-gray-800">
            Image Generator
          </h1>

          <form
            onSubmit={(e: FormEvent) => {
              e.preventDefault();
              setLoading(true);
              getResponse();
            }}
            className="flex gap-3 mb-10"
          >
            <input
              onChange={(e) => {
                setText(e.target.value);
              }}
              type="text"
              placeholder="Type anything here.."
              className="py-3 px-5 rounded-2xl w-full bg-purple-50"
            />
            <button
              type="submit"
              className="bg-purple-800 text-blue-50 py-3 px-5 rounded-2xl"
            >
              {loading ? (
                <span className="relative animate-ping inline-flex rounded-full h-3 w-3 bg-white "></span>
              ) : (
                "Generate"
              )}
            </button>
          </form>

          <div
            className={`w-full aspect-square bg-${colors[selectedBox]}-100 mb-4 relative`}
          >
            {data && (
              <Image
                src={data[selectedBox].url}
                alt=""
                fill
                style={{
                  objectFit: "cover",
                }}
              />
            )}
          </div>
          <div className="w-full flex gap-4">
            {colors.map((c, i) => {
              return (
                <div
                  key={c}
                  className={`bg-${c}-100 aspect-square w-full h-full cursor-pointer relative`}
                  onClick={() => {
                    setSelectedBox(i);
                  }}
                >
                  {data && (
                    <Image
                      src={data[i].url}
                      alt=""
                      fill
                      style={{
                        objectFit: "cover",
                      }}
                    />
                  )}
                </div>
              );
            })}
          </div>

          <div className="mt-10 text-sm text-center font-bold text-gray-500 tracking-wider">
            <h4>By Arridho Pradana</h4>
            <p className="text-xs mt-1 text-gray-400 font-mono font-light">
              Made with OpenAI
            </p>
          </div>
        </div>
      </div>
    </>
  );
}
